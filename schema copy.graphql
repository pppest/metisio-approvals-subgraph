type User @entity {
  id: ID!
  address: Bytes!
  tokenBalance: BigInt!
  rewards: BigInt!
  allTimeMetisReward: BigInt!
  lastMetisReward: BigInt!
  allTimeCerusReward: BigInt!
  lastCerusReward: BigInt!
  userCollections: [UserCollection!]!
  deposits: BigInt!
  withdraws: [BigInt!]!
}

type UserCollection @entity {
  id: ID!
  address: Bytes!
  userAddress: Bytes!
  allTimeMetisReward: BigInt!
  lastMetisReward: BigInt!
  allTimeCerusReward: BigInt!
  lastCerusReward: BigInt!
  tokenIds: [BigInt!]!
  timesRewarded: BigInt!
}

type Collection @entity {
  id: ID!
  address: Bytes!
  tokenIds: [BigInt!]!
}

type Deposit @entity {
  id: ID!
  collection: Bytes!
  tokenId: BigInt!
  user: Bytes!
  timestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
}

type Withdraw @entity {
  id: ID!
  user: Bytes!
  collection: Bytes!
  tokenId: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
}

type RewardAdded @entity {
  id: ID!
  collection: Bytes!
  tokenIds: [BigInt!]!
  amountMetis: BigInt!
  amountCerus: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
}

type UserReward @entity {
  id: ID!
  user: Bytes!
  collection: Bytes!
  tokenIds: [BigInt!]!
  amountMetis: BigInt!
  amountCerus: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
}

type Claim @entity {
  id: ID!
  user: Bytes!
  amountMetis: BigInt!
  amountCerus: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
}

type RetrieveToken @entity {
  id: ID!
  token: Bytes!
  amount: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
}
